name: Continuous Delivery
on:
  push:
    branches:
      - master
  pull_request:

jobs:

  #   _________                __  .__
  # \_   ___ \  ____   _____/  |_|__| ____  __ __  ____  __ __  ______
  # /    \  \/ /  _ \ /    \   __\  |/    \|  |  \/  _ \|  |  \/  ___/
  # \     \___(  <_> )   |  \  | |  |   |  \  |  (  <_> )  |  /\___ \
  #  \______  /\____/|___|  /__| |__|___|  /____/ \____/|____//____  >
  #         \/            \/             \/                        \/
  # .___        __                              __  .__
  # |   | _____/  |_  ____   ________________ _/  |_|__| ____   ____
  # |   |/    \   __\/ __ \ / ___\_  __ \__  \\   __\  |/  _ \ /    \
  # |   |   |  \  | \  ___// /_/  >  | \// __ \|  | |  (  <_> )   |  \
  # |___|___|  /__|  \___  >___  /|__|  (____  /__| |__|\____/|___|  /
  #          \/          \/_____/            \/                    \/
  
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
        
      - name: Checkout
        uses: actions/checkout@v1
    
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install Dependencies
        run: npm i
    
      - name: Build
        run: npm run build

      - name: Store Artifact 
        uses: actions/upload-artifact@v2
        with:
          name: website-dist
          path: dist

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
  
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
        
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i
  
      - name: Lint the code
        run: echo Simulating lint #npm run lint 

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
  
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
        
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i
  
      - name: Run Unit Tests
        run: npm t

  security-audit:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
 
      - name: Check for security issue
        run: npm audit --audit-level=critical #or "high"

  static-analysis:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v1
  
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript
  
      - name: Perform Analysis
        #uses: github/codeql-action/analyze@v1
        run: echo Simulating static analysis


  # _________                __  .__
  # \_   ___ \  ____   _____/  |_|__| ____  __ __  ____  __ __  ______
  # /    \  \/ /  _ \ /    \   __\  |/    \|  |  \/  _ \|  |  \/  ___/
  # \     \___(  <_> )   |  \  | |  |   |  \  |  (  <_> )  |  /\___ \
  #  \______  /\____/|___|  /__| |__|___|  /____/ \____/|____//____  >
  #         \/            \/             \/                        \/
  # ________                .__                                      __
  # \______ \   ____ ______ |  |   ____ ___.__. _____   ____   _____/  |_
  #  |    |  \_/ __ \\____ \|  |  /  _ <   |  |/     \_/ __ \ /    \   __\
  #  |    `   \  ___/|  |_> >  |_(  <_> )___  |  Y Y  \  ___/|   |  \  |
  # /_______  /\___  >   __/|____/\____// ____|__|_|  /\___  >___|  /__|
  #         \/     \/|__|               \/          \/     \/     \/
  
  deploy-prod:
    runs-on: ubuntu-latest
    needs: [build, test, lint, security-audit, static-analysis]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      
      - name: Tag 
        id: autotagger
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Release
        id: create_release
        if: steps.autotagger.outputs.tagname != ''
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.autotagger.outputs.tagname }}
          release_name: Version ${{ steps.autotagger.outputs.version }}
          body: ${{ steps.autotagger.outputs.tagmessage }}
          draft: false
          prerelease: true

      - name: Retrieve Artifact
        uses: actions/download-artifact@v2
        with:
          name: website-dist
          path: dist

      - name: Publish
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i
      
      - name: Smoke Test
        run: export TEST_URL=https://codex1.academy && npm run smoke

      - name: Rollback Release
        if: failure() && steps.create_release.outputs.id != ''
        uses: author/action-rollback@stable
        with:
          id: ${{ steps.create_release.id }}
          tag: ${{ steps.autotagger.outputs.tagname }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rebuild Previous Version
        if: failure() && steps.create_release.outputs.id != ''
        run: npm run build
      
      - name: Re-Publish Previous Version
        if: failure() && steps.create_release.outputs.id != ''
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist